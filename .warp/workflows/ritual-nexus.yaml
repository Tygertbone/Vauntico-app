workflows:
  - name: Dream Mover • Cosmic Picker (categories)
    command: |
      pwsh -NoProfile -Command "
        Write-Host 'Categories:';
        Write-Host '1) Novice (guided basics)';
        Write-Host '2) Dev (cache links)';
        Write-Host '3) Creator (media)';
        Write-Host '4) Sysadmin (bulk)';
        $choice = Read-Host 'Choose category (1-4)';
        switch ($choice) {
          1 { $plan='vauntico-dream-mover/plans/vauntico.sample.yml' }
          2 { $plan='vauntico-dream-mover/plans/dev-cache.sample.yml' }
          3 { $plan='vauntico-dream-mover/plans/media-cleanup.sample.yml' }
          4 { $plan='vauntico-dream-mover/plans/docker-volumes.sample.yml' }
          Default { $plan='vauntico-dream-mover/plans/developer-storage.sample.yml' }
        }
        node vauntico-dream-mover/dist/cli.js simulate --plan $plan --report vauntico-dream-mover/logs/report.json --out vauntico-dream-mover/logs/manifest.json
      "
    description: A guided picker that maps persona → plan and runs simulate
    tags: [vauntico, rituals, cosmic, picker]

  - name: Dream Mover • Marketplace (pull)
    command: node vauntico-dream-mover/dist/cli.js marketplace-pull -- --plan {{plan}} --source vauntico-dream-mover/marketplace/index.json
    description: Pull a marketplace plan into local plans/
    tags: [vauntico, rituals, marketplace]
    arguments:
      - name: plan
        description: Plan name (see marketplace/index.json)
        default: developer-storage.sample.yml

  - name: Dream Mover • Tier check (stub)
    command: node vauntico-dream-mover/dist/cli.js tier-check -- --output vauntico-dream-mover/logs/tier.json
    description: Output current tier limits to logs/tier.json (Seeker defaults)
    tags: [vauntico, rituals, tiers]

  - name: Dream Mover • Phase 2 Sim (shadow map)
    command: |
      pwsh -NoProfile -Command "
        $plan = 'vauntico-dream-mover/plans/developer-storage.sample.yml';
        node vauntico-dream-mover/dist/cli.js simulate --plan $plan --report vauntico-dream-mover/logs/report.json --out vauntico-dream-mover/logs/manifest.json;
        Write-Host 'Mermaid shadow map written to vauntico-dream-mover/logs/shadow-map.mmd';
      "
    description: Run simulate and generate Mermaid shadow-map.mmd (Phase 2 stub)
    tags: [vauntico, rituals, phase2]

  - name: Dream Mover • Phase 3 Render (Mermaid + Risks)
    command: |
      pwsh -NoProfile -Command "
        $plan = 'vauntico-dream-mover/plans/db-relocation.sample.yml';
        node vauntico-dream-mover/dist/cli.js simulate --plan $plan --report vauntico-dream-mover/logs/report.json --out vauntico-dream-mover/logs/manifest.json;
        Write-Host 'Open web dashboard and Gaze Shadows to render logs/shadow-map.mmd';
      "
    description: Simulate DB relocation to spike service-lock risk and view Mermaid render in web dashboard
    tags: [vauntico, rituals, phase3]

  - name: Dream Mover • Phase 4 Vet & Rust POC
    command: |
      pwsh -NoProfile -Command "
        node vauntico-dream-mover/dist/cli.js marketplace-pull --plan docker-volumes.sample.yml --source vauntico-dream-mover/marketplace/index.json --vet;
        node vauntico-dream-mover/dist/cli.js simulate --plan vauntico-dream-mover/plans/docker-volumes.sample.yml --report vauntico-dream-mover/logs/report.json --out vauntico-dream-mover/logs/manifest.json --use-rust;
        Write-Host 'If DM_RUST_LIB is set, simulate will log Rust core availability.';
      "
    description: Vet a marketplace plan and run simulate with Rust POC flag
    tags: [vauntico, rituals, phase4]

  - name: Dream Mover • Phase 5 Gates & Cert Quest
    command: |
      pwsh -NoProfile -Command "
        node vauntico-dream-mover/dist/cli.js tier-check --output vauntico-dream-mover/logs/tier-profile.json;
        node vauntico-dream-mover/dist/cli.js simulate --plan vauntico-dream-mover/plans/monorepo-ai-links.sample.yml --report vauntico-dream-mover/logs/report.json --out vauntico-dream-mover/logs/manifest.json;
        Write-Host 'Open web dashboard → TierGate upgrade + CertQuest';
      "
    description: Check tier, simulate monorepo plan, then visit web to upgrade and attempt cert quest (stubs)
    tags: [vauntico, rituals, phase5]

  - name: Dream Mover • Phase 6 Bridge & Runes
    command: |
      pwsh -NoProfile -Command "
        $env:DM_USE_RUST='true';
        node vauntico-dream-mover/dist/cli.js simulate --plan vauntico-dream-mover/plans/db-relocation.sample.yml --report vauntico-dream-mover/logs/report.json --out vauntico-dream-mover/logs/manifest.json --use-rust;
        node vauntico-dream-mover/dist/cli.js rune-infuse --template gdpr --plan vauntico-dream-mover/plans/db-relocation.sample.yml --out vauntico-dream-mover/plans/db-relocation.gdpr.yml;
        Write-Host 'GDPR infused plan written. Open web and use ComplianceWizard to review.';
      "
    description: Use Rust-gated simulate and weave GDPR runes into DB plan (stubs, safe)
    tags: [vauntico, rituals, phase6]

  - name: Dream Mover • Phase 7 Sentinel & Coven
    command: |
      pwsh -NoProfile -Command "
        node vauntico-dream-mover/dist/cli.js tier-check --sso-provider google --email guild@example.com --output vauntico-dream-mover/logs/tier-profile.json;
        node vauntico-dream-mover/dist/cli.js rune-infuse --template gdpr --plan vauntico-dream-mover/plans/monorepo-ai-links.sample.yml --out vauntico-dream-mover/plans/monorepo-ai-links.gdpr.yml;
        node vauntico-dream-mover/dist/cli.js coven-share --plan-id monorepo-ai-links.gdpr.yml --team-id guild-stub --req 2;
        Write-Host 'Open web dashboard → SSO Sentinel (login stub) and CovenCollab to share/vote';
      "
    description: SSO stub + share a GDPR-infused monorepo plan to a guild and cast approvals (CLI-driven)
    tags: [vauntico, rituals, phase7]

  - name: Dream Mover • Phase 8 Bastion & Banner
    command: |
      pwsh -NoProfile -Command "
        node vauntico-dream-mover/dist/cli.js on-prem-init --compose;
        node vauntico-dream-mover/dist/cli.js white-label --org 'Vauntico Corp' --soc2 --uptime 99.9% --out vauntico-dream-mover/white-label/white-label.sla.yml;
        Write-Host 'Open web dashboard → On-Prem Banner + WhiteLabel Wizard';
      "
    description: Initialize on-prem env and generate SLA (white-label) stubs
    tags: [vauntico, rituals, phase8]

  - name: Dream Mover • Phase 9 Portal & Pulse
    command: |
      pwsh -NoProfile -Command "
        Start-Job -ScriptBlock { node vauntico-dream-mover/dist/cli.js api-serve --port 3001 } | Out-Null;
        node vauntico-dream-mover/dist/cli.js cron-rite --plan vauntico-dream-mover/plans/monorepo-ai-links.gdpr.yml --template gdpr --expr \"0 0 * * *\";
        Write-Host 'API served on 3001 (stub) and cron schedule written. Open ApiPortal and CronRite in web.';
      "
    description: Serve API (stub) and schedule cron infusion
    tags: [vauntico, rituals, phase9]
