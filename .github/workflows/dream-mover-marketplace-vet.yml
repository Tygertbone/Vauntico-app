name: Dream Mover Marketplace • Vet Plans

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'vauntico-dream-mover/plans/**'
      - 'vauntico-dream-mover/src/planner/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: corepack enable
      - run: pnpm -v
      - name: Install deps (root)
        run: pnpm install --frozen-lockfile=false
      - name: Build Dream Mover
        working-directory: vauntico-dream-mover
        run: pnpm build
      - name: Validate module plans
        working-directory: vauntico-dream-mover
        run: node dist/cli.js validate-plans --dir plans
      - name: Validate repo-wide plans
        run: node vauntico-dream-mover/dist/cli.js validate-plans --dir vauntico-dream-mover/plans
      - name: Marketplace vet (plans)
        working-directory: vauntico-dream-mover
        run: node dist/marketplace/vetter.js --dir plans --report logs/vet-report.json
      - name: Compliance badge check (plans)
        working-directory: vauntico-dream-mover
        run: node dist/marketplace/vetter.js --dir plans --report logs/vet-report.json || true
      - name: Comment on PR with vet report
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const p = 'vauntico-dream-mover/logs/vet-report.json';
            if (!fs.existsSync(p)) return core.notice('No vet report found.');
            const report = JSON.parse(fs.readFileSync(p, 'utf8'));
            if (!report.issues || !report.issues.length) {
              core.notice('No marketplace vet issues.');
              return;
            }
            const body = ['Marketplace vet issues found:', ...report.issues.map(i => `- ${i.file}: ${i.rule} — ${i.message}`)].join('\n');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
