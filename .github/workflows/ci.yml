name: Site CI

on:
  push:
    branches: [main, 'feat/**', 'fix/**', 'chore/**', 'perf/**', 'refactor/**']
    paths:
      - 'src/**'
      - 'public/**'
      - 'server/**'
      - 'next.config.*'
      - 'vercel.json'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'tailwind.config.*'
      - '.github/workflows/**'
  pull_request:
    branches: ['**']
    paths:
      - 'src/**'
      - 'public/**'
      - 'server/**'
      - 'next.config.*'
      - 'vercel.json'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'tailwind.config.*'
      - '.github/workflows/**'

# NOTE: For supply-chain hardening, replace action version tags with pinned commit SHAs.
# Example: actions/checkout@<sha> instead of @v4. We can pin after merging by fetching release SHAs.
permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quick-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - run: pnpm install --frozen-lockfile
      - name: Run QA ritual (non-blocking)
        run: pnpm run -s ritual:qa || true
      - name: Lint (if present)
        run: pnpm run -s lint --if-present

  build:
    needs: quick-lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Restore Next cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: next-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            next-${{ runner.os }}-
      - run: pnpm install --frozen-lockfile
      - name: Check versions
        run: |
          pnpm -v
          node -v
      - name: Build (Next)
        run: pnpm build
